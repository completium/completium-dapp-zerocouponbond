archetype zero_coupon_bond

variable issuer     : role = @tz1bfVgcJC4ukaQSHUe1EbrUd5SekXeP9CWk

variable subscriber : role = @tz1Lc2qBKEWCBeDU8npG6zCeCqpmaegRi6Jg

variable facevalue : tez = 10tz

variable discount : rational = 14%

variable maturityduration : duration = 1m

variable paybackduration  : duration = 1m

variable issuersigned     : bool = false
variable subscribersigned : bool = false
variable signaturedate    : option<date> = none

states =
  | Created initial
  | Signed
  | Terminated
  | Disputed

transition toSigned() {
  called by selfaddress
  from Created to Signed with effect {
    signaturedate := some(now)
  }
}

entry sign () {
  if caller = issuer then
    issuersigned := true
  else if caller = subscriber then begin
    subscribersigned := true;
    var presentvalue = discount * facevalue;
    dorequire(transferred >= presentvalue, "SUBSCRIBER_INVALID_TRANSFERRED");
    transfer presentvalue to issuer;
  end
  else fail("CALLER_NOT_A_SIGNER");
  if issuersigned and subscribersigned then
    transfer 0tz to entry self.toSigned();
}

transition terminate () {
  called by issuer
  from Signed to Terminated when {
    match_option signaturedate with
    | some(d) ->
      d + maturityduration <=  now <= d + maturityduration + paybackduration and
      transferred >= facevalue
    | none -> false
    end
  } with effect {
    transfer facevalue to subscriber
  }
}

transition dispute () {
  called by subscriber
  from Signed to Disputed when {
    match_option signaturedate with
    | some(d) ->
      d + maturityduration + paybackduration <=  now
    | none -> false
    end
  }
}
